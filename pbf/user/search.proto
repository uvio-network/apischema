syntax = "proto3";

package user;
option go_package = "./;user";

// SearchI is the input for searching users.
//
//     {
//         "filter": {
//             "paging": {
//                 "kind": "page",
//                 "start": "0",
//                 "stop": "49"
//             }
//         },
//         "object": [
//             {
//                 "intern": {
//                     "id": "551265"
//                 }
//             }
//         ]
//     }
//
message SearchI {
  SearchI_Filter filter = 100;
  repeated SearchI_Object object = 200;
}

message SearchI_Filter {
  SearchI_Filter_Paging paging = 100;
}

message SearchI_Filter_Paging {
  string kind = 100;
  string start = 200;
  string stop = 300;
}

message SearchI_Object {
  SearchI_Object_Intern intern = 100;
  SearchI_Object_Public public = 200;
  SearchI_Object_Symbol symbol = 300;
}

message SearchI_Object_Intern {
  // id is the ID of the user being searched. id set to "self" returns the
  // current user sending the request, based on the given authorization
  // parameters. Given an OAuth access token, its encoded subject claim may
  // refer to the internally persisted user object.
  string id = 100;
}

message SearchI_Object_Public {
  // name is the name of the user being searched.
  string name = 100;
}

message SearchI_Object_Symbol {}

// SearchO is the output for searching users.
//
//     {
//         "object": [
//             {
//                 "intern": {
//                     "created": "1689001255",
//                     "id": "551265"
//                 },
//                 "public": {
//                     "image": "https://gravatar.com/9050f8ea",
//                     "name": "xh3b4sd"
//                 }
//             },
//             ...
//         ]
//     }
//
message SearchO {
  SearchO_Filter filter = 100;
  repeated SearchO_Object object = 200;
}

message SearchO_Filter {}

message SearchO_Object {
  SearchO_Object_Extern extern = 100;
  SearchO_Object_Intern intern = 200;
  SearchO_Object_Public public = 300;
}

message SearchO_Object_Extern {}

message SearchO_Object_Intern {
  // created is the unix timestamp in seconds at which the event got created.
  string created = 100;
  // id is the ID of the user being searched.
  string id = 200;
}

message SearchO_Object_Public {
  // image is the URL pointing to the user's profile picture.
  string image = 100;
  // name is the user name.
  string name = 200;
  // pointers is the user's mapping between note kinds and note pointers. The
  // pointers tracked here per notification topic keep track of the point up to
  // which users caught up with their notifications.
  map<string, string> pointers = 300;
}
