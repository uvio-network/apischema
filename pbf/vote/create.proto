syntax = "proto3";

package vote;
option go_package = "./;vote";

// CreateI is the input for creating votes.
//
//     {
//         "object": [
//             {
//                 "public": {
//                     "chain": "421614",
//                     "claim": "778237",
//                     "hash": "0x1234",
//                     "kind": "stake",
//                     "option": "true",
//                     "value": "1.5"
//                 }
//             }
//         ]
//     }
//
message CreateI {
  CreateI_Filter filter = 100;
  repeated CreateI_Object object = 200;
}

message CreateI_Filter {}

message CreateI_Object {
  CreateI_Object_Intern intern = 100;
  CreateI_Object_Public public = 200;
}

message CreateI_Object_Intern {}

message CreateI_Object_Public {
  // chain is the chain ID on which a vote got expressed.
  string chain = 100;
  // claim is the ID of the referenced claim being voted on. Note that the
  // lifecycle of the referenced claim must be compliant with the vote kind
  // provided.
  string claim = 200;
  // hash is the onchain transaction hash for this vote. Setting hash implies
  // that the vote got confirmed onchain, and with it the lifecycle phase
  // "onchain" will be inferred automatically.
  string hash = 300;
  // kind is the type of vote, e.g. "stake" or "truth" on which a vote is cast.
  // Note that kind must be compliant with the lifecycle of the referenced
  // claim.
  //
  //     "stake" defines votes for users expressing their own opinions. A vote
  //     may have set kind "stake" to express opinions on claims of either kind
  //     "adjourn", "dispute", "nullify" or "propose".
  //
  //     "truth" defines votes for users verifying real world events. A vote may
  //     have set kind "stake" to verify real events on claims of kind
  //     "resolve".
  //
  string kind = 400;
  // lifecycle describes the evolutionary stage of a vote. All votes start with
  // the lifecycle phase "pending". Those pending votes were posted offchain,
  // but have not yet been confirmed onchain. Once votes have been confirmed
  // onchain the vote's lifecycle phase will be set to "onchain".
  //
  //     "onchain" describes votes that have been confirmed onchain.
  //
  //     "pending" describes votes that are not confirmed onchain.
  //
  string lifecycle = 500;
  // meta may contain any meta data about this vote. It is an optional field
  // that may or may not be used.
  string meta = 600;
  // option is the side of the vote being cast, e.g. "true" or "false". If
  // option is "true", then the vote is in agreement. If option is "false", then
  // the vote is in disagreement.
  string option = 700;
  // value is the weight of the vote being cast. If kind is "stake", then value
  // might be any positive number. If kind is "truth", then value must be 1.
  string value = 800;
}

// CreateO is the output for creating votes.
//
//     {
//         "object": [
//             {
//                 "intern": {
//                     "created": "1689001255",
//                     "id": "778237"
//                 }
//             }
//         ]
//     }
//
message CreateO {
  CreateO_Filter filter = 100;
  repeated CreateO_Object object = 200;
}

message CreateO_Filter {}

message CreateO_Object {
  CreateO_Object_Intern intern = 100;
  CreateO_Object_Public public = 200;
}

message CreateO_Object_Intern {
  // created is the unix timestamp in seconds at which the vote got created.
  string created = 100;
  // id is the ID of the vote object being created.
  string id = 200;
}

message CreateO_Object_Public {}
